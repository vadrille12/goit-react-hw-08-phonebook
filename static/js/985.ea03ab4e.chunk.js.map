{"version":3,"file":"static/js/985.ea03ab4e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","redux/filter/selectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  ErrorMessage as Error,\n  Field as FormikField,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n  margin: 30px auto;\n  width: 400px;\n  height: 300px;\n  padding: 20px;\n  border-radius: 6px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 20px;\n  text-align: left;\n  font-weight: 600;\n`;\n\nexport const Field = styled(FormikField)`\n  font-size: 18px;\n  padding: 10px 15px;\n  border-radius: 6px;\n  margin-bottom: 6px;\n  background-color: transparent;\n  border: none;\n  border: 2px solid blue;\n\n  &:focus {\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  }\n\n  &::placeholder {\n    font-size: 15px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  position: absolute;\n  bottom: 25px;\n  right: 25px;\n\n  padding: 7px 15px;\n  border: none;\n  border-radius: 7px;\n  font-size: 18px;\n  border: 2px solid green;\n\n  cursor: pointer;\n  background-color: transparent;\n\n  transition: all 300ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n    background-color: green;\n  }\n\n  &:active {\n    color: white;\n    background-color: #629ee1;\n  }\n`;\n\nexport const ErrorMessage = styled(Error)`\n  color: red;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  Form,\n  FormButton,\n  FormField,\n  ErrorMessage,\n  Field,\n} from './ContactsForm.styled';\n\nconst phoneRegex =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\nconst phoneError =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Please, enter contact name'),\n  number: Yup.string()\n    .matches(phoneRegex, phoneError)\n    .required('Please, enter phone number'),\n});\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, actions) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      return alert(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n  \n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={ContactSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormField>\n          Name\n          <Field\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            placeholder=\"Вениамин Валерьянович, сосед из 43 кв.\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormField>\n        <FormField>\n          Number\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"8 800 5353535\"\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormField>\n\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from '../contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) return contacts;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Data = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 18px;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: auto;\n  margin-right: 40px;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 6px;\n  font-size: 18px;\n  background-color: transparent;\n  color: black;\n  border: 2px solid #c9041e;\n\n  cursor: pointer;\n\n  transition: all 300ms ease-out;\n\n  &:hover {\n    transform: scale(1.05);\n    background-color: #c9041e;\n    color: white;\n  }\n\n  &:active {\n    color: white;\n    background-color: #0d488b;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { DeleteBtn, Data } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Data>\n        {name}: {number}\n        <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </DeleteBtn>\n      </Data>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\n\nimport { selectFilteredContacts } from 'redux/filter/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <ContactItem id={id} name={name} number={number} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-left: 30px;\n  font-size: 16px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 15px;\n  width: 250px;\n  font-size: 15px;\n  padding: 10px;\n  border-radius: 4px;\n  border: 2px solid blue;\n\n  &:focus {\n    outline: none;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  }\n\n  &::placeholder {\n    font-size: 15px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { filterContacts } from 'redux/filter/slice';\n\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"nameToFind\"\n          value={filter}\n          onChange={e => dispatch(filterContacts(e.target.value))}\n          autoComplete=\"off\"\n          placeholder=\"Наталья, морская пехота\"\n        />\n      </Label>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst styles = {\n  main: { width: 500, margin: '20 auto', padding: 20, borderRadius: 10 },\n\n  h1: { fontSize: 30, textTransform: 'uppercase', textAlign: 'center' },\n\n  h2: {\n    fontSize: 24,\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n};\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main className={styles.main}>\n      <h1 className={styles.h1}>Phonebook</h1>\n      <ContactsForm />\n\n      <h2 className={styles.h2}>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <p>Request in progress...</p>}\n      {error && <p>{error}</p>}\n      <ContactsList />\n    </main>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","Form","styled","FormikForm","FormField","Field","FormikField","FormButton","ErrorMessage","Error","ContactSchema","Yup","shape","name","min","max","required","number","matches","ContactsForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","find","contact","alert","addContact","resetForm","type","autoComplete","placeholder","component","selectFilter","filter","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","Data","DeleteBtn","ContactItem","id","onClick","deleteContact","ContactsList","filteredContacts","map","Label","Input","Filter","value","onChange","e","filterContacts","target","styles","main","width","margin","padding","borderRadius","h1","fontSize","textTransform","textAlign","h2","marginBottom","ContactsPage","useEffect","fetchContacts","className"],"sourceRoot":""}